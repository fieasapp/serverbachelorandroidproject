/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.androidvizlab.bachelor.Gui;

import com.androidvizlab.bachelor.Controller.ServerSettingsController;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JEditorPane;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author The Hive
 */
public class HelpWindow extends javax.swing.JFrame {

    //URL to open
    private String defaultURL;
    
    private URL currentPage = null;
    private URL nextPage = null;
    private URL prevPage = null;
    
    //Listeners
    private HyperlinkListener linkListener = null;
    private ActionListener actionListener = null;
    
    /**
     * Constructor for the HelpWindow class.
     * Initialises various components and sets the page(html(s)) to be displayed
     * to the Window/Frame
     * 
     * @param defaultURL the URL of the index page 
     */
    public HelpWindow(String defaultURL) 
    {
        super.setIconImage(new ImageIcon("src/resources/images/frameicon.png").getImage()); //window icon

        this.defaultURL = defaultURL; //URL of the html to be displayed

        this.initComponents(); //initialises various components

        /*
         * Set the page to the JEditorPane
         */
        try 
        {
            currentPage = new URL(defaultURL);
            this.mainEditorPane.setContentType("txt/html");
            //this.mainEditorPane.setText(defaultURL);
            this.mainEditorPane.setPage(currentPage);
        } 
        catch (IOException ex) 
        {
            ex.printStackTrace();
        }
    }
    
    /**
     * Overloaded Constructor
     * Uses file absolute path to convert to URL of the html page to be viewed
     * 
     * @param file files absolute path is to be converted to URL
     */
    public HelpWindow(File file) 
    {
        super.setIconImage(new ImageIcon("src/resources/images/frameicon.png").getImage()); //window icon
         
        this.initComponents(); //initialises various components

        /*
         * Set the page to the JEditorPane
         */
        try 
        {
            currentPage = file.toURI().toURL(); //URL of the html to be displayed
            
            this.mainEditorPane.setContentType("txt/html");
            //this.mainEditorPane.setText(defaultURL);
            
            this.mainEditorPane.setPage(currentPage);
        } 
        catch (IOException ex) 
        {
            ex.printStackTrace();
        }
    }
    
    /**
     * Method to set the next page to be displayed
     * This method is accessed by the controller class to set the next page
     * with the URL that the user clicked on the link.
     * 
     * @param link link from the current page to the next page.
     * @throws IOException exception thrown when the page cannot be set.
     */
    public void viePage(URL link) throws IOException
    {
        this.mainEditorPane.setPage(link);
    }
    
    //GETTERS AND SETTERS
    public String getDefaultURL() {
        return defaultURL;
    }

    public void setDefaultURL(String defaultURL) {
        this.defaultURL = defaultURL;
    }
    
    public void setActionListeners(ActionListener actionListener)
    {
        this.actionListener = actionListener;
        
        btnForward.addActionListener(actionListener);
        btnForward.setActionCommand(ServerSettingsController.COMMAND_NEXTPAGE);
        btnBack.addActionListener(actionListener);
        btnBack.setActionCommand(ServerSettingsController.COMMAND_PREVIOUSPAGE);
    }
    
    public void setHyperLinkListener(HyperlinkListener linkListener)
    {
        this.linkListener = linkListener;
        this.mainEditorPane.addHyperlinkListener(linkListener);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mainEditorPane = new javax.swing.JEditorPane();
        btnBack = new javax.swing.JButton();
        btnForward = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("resources/others/LabelsAndButtonTextBundle"); // NOI18N
        setTitle(bundle.getString("helpWindowTitle")); // NOI18N
        setMinimumSize(new java.awt.Dimension(500, 700));
        setPreferredSize(new java.awt.Dimension(500, 700));
        setResizable(false);

        mainEditorPane.setEditable(false);
        mainEditorPane.setMinimumSize(new java.awt.Dimension(475, 690));
        mainEditorPane.setPreferredSize(new java.awt.Dimension(475, 690));
        jScrollPane1.setViewportView(mainEditorPane);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/arrowback.png"))); // NOI18N
        btnBack.setContentAreaFilled(false);
        btnBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/arrowbackfocused.png"))); // NOI18N
        btnBack.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/arrowbackfocused.png"))); // NOI18N

        btnForward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/arrow.png"))); // NOI18N
        btnForward.setContentAreaFilled(false);
        btnForward.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/arrowfocused.png"))); // NOI18N
        btnForward.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/arrowfocused.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnForward, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnForward, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnForward;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane mainEditorPane;
    // End of variables declaration//GEN-END:variables
}
